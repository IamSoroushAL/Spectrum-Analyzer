
DFT-Mega32.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000e0c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000022  00800060  00000e0c  00000ea0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000120  00800082  00800082  00000ec2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000ec2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000ef4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  00000f30  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000dce  00000000  00000000  00000fb8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000715  00000000  00000000  00001d86  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000677  00000000  00000000  0000249b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000190  00000000  00000000  00002b14  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000428  00000000  00000000  00002ca4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000090e  00000000  00000000  000030cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  000039da  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 fa 03 	jmp	0x7f4	; 0x7f4 <__ctors_end>
   4:	0c 94 17 04 	jmp	0x82e	; 0x82e <__bad_interrupt>
   8:	0c 94 17 04 	jmp	0x82e	; 0x82e <__bad_interrupt>
   c:	0c 94 17 04 	jmp	0x82e	; 0x82e <__bad_interrupt>
  10:	0c 94 17 04 	jmp	0x82e	; 0x82e <__bad_interrupt>
  14:	0c 94 17 04 	jmp	0x82e	; 0x82e <__bad_interrupt>
  18:	0c 94 17 04 	jmp	0x82e	; 0x82e <__bad_interrupt>
  1c:	0c 94 17 04 	jmp	0x82e	; 0x82e <__bad_interrupt>
  20:	0c 94 17 04 	jmp	0x82e	; 0x82e <__bad_interrupt>
  24:	0c 94 17 04 	jmp	0x82e	; 0x82e <__bad_interrupt>
  28:	0c 94 17 04 	jmp	0x82e	; 0x82e <__bad_interrupt>
  2c:	0c 94 17 04 	jmp	0x82e	; 0x82e <__bad_interrupt>
  30:	0c 94 17 04 	jmp	0x82e	; 0x82e <__bad_interrupt>
  34:	0c 94 17 04 	jmp	0x82e	; 0x82e <__bad_interrupt>
  38:	0c 94 17 04 	jmp	0x82e	; 0x82e <__bad_interrupt>
  3c:	0c 94 17 04 	jmp	0x82e	; 0x82e <__bad_interrupt>
  40:	0c 94 17 04 	jmp	0x82e	; 0x82e <__bad_interrupt>
  44:	0c 94 17 04 	jmp	0x82e	; 0x82e <__bad_interrupt>
  48:	0c 94 17 04 	jmp	0x82e	; 0x82e <__bad_interrupt>
  4c:	0c 94 17 04 	jmp	0x82e	; 0x82e <__bad_interrupt>
  50:	0c 94 17 04 	jmp	0x82e	; 0x82e <__bad_interrupt>

00000054 <__trampolines_end>:
	...
  74:	00 05       	cpc	r16, r0
  76:	0b 10       	cpse	r0, r11
  78:	16 1c       	adc	r1, r6
  7a:	21 27       	eor	r18, r17
  7c:	2d 32       	cpi	r18, 0x2D	; 45
  7e:	38 3d       	cpi	r19, 0xD8	; 216
  80:	43 49       	sbci	r20, 0x93	; 147
  82:	4e 54       	subi	r20, 0x4E	; 78
  84:	5a 5f       	subi	r21, 0xFA	; 250
  86:	65 6a       	ori	r22, 0xA5	; 165
  88:	70 76       	andi	r23, 0x60	; 96
  8a:	7b 81       	ldd	r23, Y+3	; 0x03
  8c:	87 8c       	ldd	r8, Z+31	; 0x1f
  8e:	92 97       	sbiw	r26, 0x22	; 34
  90:	9d a3       	std	Y+37, r25	; 0x25
  92:	a8 ae       	std	Y+56, r10	; 0x38
  94:	00 0b       	sbc	r16, r16
  96:	16 21       	and	r17, r6
  98:	2d 38       	cpi	r18, 0x8D	; 141
  9a:	43 4e       	sbci	r20, 0xE3	; 227
  9c:	5a 65       	ori	r21, 0x5A	; 90
  9e:	70 7b       	andi	r23, 0xB0	; 176
  a0:	87 92       	lat	Z, r8
  a2:	9d a8       	ldd	r9, Y+53	; 0x35
  a4:	00 0b       	sbc	r16, r16
  a6:	16 21       	and	r17, r6
  a8:	2c 38       	cpi	r18, 0x8C	; 140
  aa:	43 4e       	sbci	r20, 0xE3	; 227
  ac:	5a 65       	ori	r21, 0x5A	; 90
  ae:	70 7b       	andi	r23, 0xB0	; 176
  b0:	86 92       	lac	Z, r8
  b2:	9d a8       	ldd	r9, Y+53	; 0x35
  b4:	00 10       	cpse	r0, r0
  b6:	21 32       	cpi	r18, 0x21	; 33
  b8:	43 54       	subi	r20, 0x43	; 67
  ba:	65 76       	andi	r22, 0x65	; 101
  bc:	87 97       	sbiw	r24, 0x27	; 39
  be:	a8 05       	cpc	r26, r8
  c0:	16 27       	eor	r17, r22
  c2:	38 49       	sbci	r19, 0x98	; 152
  c4:	5a 6a       	ori	r21, 0xAA	; 170
  c6:	7b 8c       	ldd	r7, Y+27	; 0x1b
  c8:	9d ae       	std	Y+61, r9	; 0x3d
  ca:	0b 1c       	adc	r0, r11
  cc:	2d 3d       	cpi	r18, 0xDD	; 221
  ce:	4e 5f       	subi	r20, 0xFE	; 254
  d0:	70 81       	ld	r23, Z
  d2:	92 a3       	std	Z+34, r25	; 0x22
  d4:	00 16       	cp	r0, r16
  d6:	2d 43       	sbci	r18, 0x3D	; 61
  d8:	5a 70       	andi	r21, 0x0A	; 10
  da:	87 9d       	mul	r24, r7
  dc:	00 16       	cp	r0, r16
  de:	2c 43       	sbci	r18, 0x3C	; 60
  e0:	5a 70       	andi	r21, 0x0A	; 10
  e2:	86 9d       	mul	r24, r6
  e4:	00 16       	cp	r0, r16
  e6:	2d 43       	sbci	r18, 0x3D	; 61
  e8:	59 70       	andi	r21, 0x09	; 9
  ea:	86 9d       	mul	r24, r6
  ec:	00 16       	cp	r0, r16
  ee:	2d 43       	sbci	r18, 0x3D	; 61
  f0:	59 70       	andi	r21, 0x09	; 9
  f2:	87 9d       	mul	r24, r7
  f4:	00 1c       	adc	r0, r0
  f6:	38 54       	subi	r19, 0x48	; 72
  f8:	70 8c       	ldd	r7, Z+24	; 0x18
  fa:	a8 10       	cpse	r10, r8
  fc:	2c 49       	sbci	r18, 0x9C	; 156
  fe:	65 81       	ldd	r22, Z+5	; 0x05
 100:	9d 05       	cpc	r25, r13
 102:	21 3d       	cpi	r18, 0xD1	; 209
 104:	59 76       	andi	r21, 0x69	; 105
 106:	92 ae       	std	Z+58, r9	; 0x3a
 108:	16 32       	cpi	r17, 0x26	; 38
 10a:	4e 6a       	ori	r20, 0xAE	; 174
 10c:	87 a3       	std	Z+39, r24	; 0x27
 10e:	0b 27       	eor	r16, r27
 110:	43 5f       	subi	r20, 0xF3	; 243
 112:	7b 97       	sbiw	r30, 0x1b	; 27
 114:	00 21       	and	r16, r0
 116:	43 65       	ori	r20, 0x53	; 83
 118:	87 a8       	ldd	r8, Z+55	; 0x37
 11a:	16 38       	cpi	r17, 0x86	; 134
 11c:	5a 7b       	andi	r21, 0xBA	; 186
 11e:	9d 0b       	sbc	r25, r29
 120:	2d 4e       	sbci	r18, 0xED	; 237
 122:	70 92 00 21 	sts	0x2100, r7	; 0x802100 <__bss_end+0x1f5e>
 126:	43 65       	ori	r20, 0x53	; 83
 128:	87 a8       	ldd	r8, Z+55	; 0x37
 12a:	16 38       	cpi	r17, 0x86	; 134
 12c:	5a 7b       	andi	r21, 0xBA	; 186
 12e:	9d 0b       	sbc	r25, r29
 130:	2c 4e       	sbci	r18, 0xEC	; 236
 132:	70 92 00 27 	sts	0x2700, r7	; 0x802700 <__bss_end+0x255e>
 136:	4e 76       	andi	r20, 0x6E	; 110
 138:	9d 10       	cpse	r9, r13
 13a:	38 5f       	subi	r19, 0xF8	; 248
 13c:	86 ae       	std	Z+62, r8	; 0x3e
 13e:	21 49       	sbci	r18, 0x91	; 145
 140:	70 97       	sbiw	r30, 0x10	; 16
 142:	0b 32       	cpi	r16, 0x2B	; 43
 144:	59 81       	ldd	r21, Y+1	; 0x01
 146:	a8 1c       	adc	r10, r8
 148:	43 6a       	ori	r20, 0xA3	; 163
 14a:	92 05       	cpc	r25, r2
 14c:	2c 54       	subi	r18, 0x4C	; 76
 14e:	7b a3       	std	Y+35, r23	; 0x23
 150:	16 3d       	cpi	r17, 0xD6	; 214
 152:	65 8c       	ldd	r6, Z+29	; 0x1d
 154:	00 2d       	mov	r16, r0
 156:	5a 87       	std	Y+10, r21	; 0x0a
 158:	00 2c       	mov	r0, r0
 15a:	5a 86       	std	Y+10, r5	; 0x0a
 15c:	00 2d       	mov	r16, r0
 15e:	59 86       	std	Y+9, r5	; 0x09
 160:	00 2d       	mov	r16, r0
 162:	59 87       	std	Y+9, r21	; 0x09
 164:	00 2c       	mov	r0, r0
 166:	5a 87       	std	Y+10, r21	; 0x0a
 168:	b3 2c       	mov	r11, r3
 16a:	59 86       	std	Y+9, r5	; 0x09
 16c:	00 2d       	mov	r16, r0
 16e:	5a 86       	std	Y+10, r5	; 0x0a
 170:	b3 2c       	mov	r11, r3
 172:	5a 87       	std	Y+10, r21	; 0x0a
 174:	00 32       	cpi	r16, 0x20	; 32
 176:	65 97       	sbiw	r28, 0x15	; 21
 178:	16 49       	sbci	r17, 0x96	; 150
 17a:	7b ae       	std	Y+59, r7	; 0x3b
 17c:	2d 5f       	subi	r18, 0xFD	; 253
 17e:	92 10       	cpse	r9, r2
 180:	43 76       	andi	r20, 0x63	; 99
 182:	a8 27       	eor	r26, r24
 184:	5a 8c       	ldd	r5, Y+26	; 0x1a
 186:	0b 3d       	cpi	r16, 0xDB	; 219
 188:	70 a3       	std	Z+32, r23	; 0x20
 18a:	21 54       	subi	r18, 0x41	; 65
 18c:	86 05       	cpc	r24, r6
 18e:	38 6a       	ori	r19, 0xA8	; 168
 190:	9d 1c       	adc	r9, r13
 192:	4e 81       	ldd	r20, Y+6	; 0x06
 194:	00 38       	cpi	r16, 0x80	; 128
 196:	70 a8       	ldd	r7, Z+48	; 0x30
 198:	2c 65       	ori	r18, 0x5C	; 92
 19a:	9d 21       	and	r25, r13
 19c:	59 92       	st	Y+, r5
 19e:	16 4e       	sbci	r17, 0xE6	; 230
 1a0:	87 0b       	sbc	r24, r23
 1a2:	43 7b       	andi	r20, 0xB3	; 179
 1a4:	b3 38       	cpi	r27, 0x83	; 131
 1a6:	70 a8       	ldd	r7, Z+48	; 0x30
 1a8:	2d 65       	ori	r18, 0x5D	; 93
 1aa:	9d 21       	and	r25, r13
 1ac:	5a 92       	st	-Y, r5
 1ae:	16 4e       	sbci	r17, 0xE6	; 230
 1b0:	86 0b       	sbc	r24, r22
 1b2:	43 7b       	andi	r20, 0xB3	; 179
 1b4:	00 3d       	cpi	r16, 0xD0	; 208
 1b6:	7b 05       	cpc	r23, r11
 1b8:	43 81       	ldd	r20, Z+3	; 0x03
 1ba:	0b 49       	sbci	r16, 0x9B	; 155
 1bc:	86 10       	cpse	r8, r6
 1be:	4e 8c       	ldd	r4, Y+30	; 0x1e
 1c0:	16 54       	subi	r17, 0x46	; 70
 1c2:	92 1c       	adc	r9, r2
 1c4:	59 97       	sbiw	r26, 0x19	; 25
 1c6:	21 5f       	subi	r18, 0xF1	; 241
 1c8:	9d 27       	eor	r25, r29
 1ca:	65 a3       	std	Z+37, r22	; 0x25
 1cc:	2c 6a       	ori	r18, 0xAC	; 172
 1ce:	a8 32       	cpi	r26, 0x28	; 40
 1d0:	70 ae       	std	Z+56, r7	; 0x38
 1d2:	38 76       	andi	r19, 0x68	; 104
 1d4:	00 43       	sbci	r16, 0x30	; 48
 1d6:	87 16       	cp	r8, r23
 1d8:	5a 9d       	mul	r21, r10
 1da:	2d 70       	andi	r18, 0x0D	; 13
 1dc:	00 43       	sbci	r16, 0x30	; 48
 1de:	87 16       	cp	r8, r23
 1e0:	5a 9d       	mul	r21, r10
 1e2:	2c 70       	andi	r18, 0x0C	; 12
 1e4:	00 43       	sbci	r16, 0x30	; 48
 1e6:	86 16       	cp	r8, r22
 1e8:	5a 9d       	mul	r21, r10
 1ea:	2c 70       	andi	r18, 0x0C	; 12
 1ec:	00 43       	sbci	r16, 0x30	; 48
 1ee:	86 16       	cp	r8, r22
 1f0:	59 9d       	mul	r21, r9
 1f2:	2d 70       	andi	r18, 0x0D	; 13
 1f4:	00 49       	sbci	r16, 0x90	; 144
 1f6:	92 27       	eor	r25, r18
 1f8:	70 05       	cpc	r23, r0
 1fa:	4e 97       	sbiw	r24, 0x1e	; 30
 1fc:	2d 76       	andi	r18, 0x6D	; 109
 1fe:	0b 54       	subi	r16, 0x4B	; 75
 200:	9d 32       	cpi	r25, 0x2D	; 45
 202:	7b 10       	cpse	r7, r11
 204:	5a a3       	std	Y+34, r21	; 0x22
 206:	38 81       	ld	r19, Y
 208:	16 5f       	subi	r17, 0xF6	; 246
 20a:	a8 3d       	cpi	r26, 0xD8	; 216
 20c:	86 1c       	adc	r8, r6
 20e:	65 ae       	std	Z+61, r6	; 0x3d
 210:	43 8c       	ldd	r4, Z+27	; 0x1b
 212:	21 6a       	ori	r18, 0xA1	; 161
 214:	00 4e       	sbci	r16, 0xE0	; 224
 216:	9d 38       	cpi	r25, 0x8D	; 141
 218:	86 21       	and	r24, r6
 21a:	70 0b       	sbc	r23, r16
 21c:	59 a8       	ldd	r5, Y+49	; 0x31
 21e:	43 92       	.word	0x9243	; ????
 220:	2c 7b       	andi	r18, 0xBC	; 188
 222:	16 65       	ori	r17, 0x56	; 86
 224:	b3 4e       	sbci	r27, 0xE3	; 227
 226:	9d 38       	cpi	r25, 0x8D	; 141
 228:	86 21       	and	r24, r6
 22a:	70 0b       	sbc	r23, r16
 22c:	59 a8       	ldd	r5, Y+49	; 0x31
 22e:	43 92       	.word	0x9243	; ????
 230:	2c 7b       	andi	r18, 0xBC	; 188
 232:	16 65       	ori	r17, 0x56	; 86
 234:	00 54       	subi	r16, 0x40	; 64
 236:	a8 49       	sbci	r26, 0x98	; 152
 238:	9d 3d       	cpi	r25, 0xDD	; 221
 23a:	92 32       	cpi	r25, 0x22	; 34
 23c:	87 27       	eor	r24, r23
 23e:	7b 1c       	adc	r7, r11
 240:	70 10       	cpse	r7, r0
 242:	65 05       	cpc	r22, r5
 244:	5a ae       	std	Y+58, r5	; 0x3a
 246:	4e a3       	std	Y+38, r20	; 0x26
 248:	43 97       	sbiw	r24, 0x13	; 19
 24a:	38 8c       	ldd	r3, Y+24	; 0x18
 24c:	2d 81       	ldd	r18, Y+5	; 0x05
 24e:	21 76       	andi	r18, 0x61	; 97
 250:	16 6a       	ori	r17, 0xA6	; 166
 252:	0b 5f       	subi	r16, 0xFB	; 251

00000254 <sin_lookup>:
 254:	00 00 ae 00 5c 01 0b 02 b9 02 67 03 15 04 c2 04     ....\.....g.....
 264:	6f 05 1c 06 c8 06 74 07 1f 08 c9 08 73 09 1c 0a     o.....t.....s...
 274:	c4 0a 6b 0b 12 0c b7 0c 5c 0d ff 0d a2 0e 43 0f     ..k.....\.....C.
 284:	e3 0f 82 10 1f 11 bb 11 56 12 f0 12 87 13 1e 14     ........V.......
 294:	b3 14 46 15 d7 15 67 16 f5 16 82 17 0c 18 95 18     ..F...g.........
 2a4:	1b 19 a0 19 23 1a a3 1a 22 1b 9f 1b 19 1c 91 1c     ....#...".......
 2b4:	07 1d 7b 1d ec 1d 5b 1e c8 1e 32 1f 9a 1f ff 1f     ..{...[...2.....
 2c4:	62 20 c2 20 20 21 7b 21 d4 21 2a 22 7d 22 ce 22     b .  !{!.!*"}"."
 2d4:	1b 23 67 23 af 23 f5 23 37 24 77 24 b4 24 ef 24     .#g#.#.#7$w$.$.$
 2e4:	26 25 5b 25 8c 25 bb 25 e6 25 0f 26 35 26 58 26     &%[%.%.%.%.&5&X&
 2f4:	78 26 94 26 ae 26 c5 26 d9 26 e9 26 f7 26 02 27     x&.&.&.&.&.&.&.'
 304:	09 27 0e 27 10 27 0e 27 09 27 02 27 f7 26 e9 26     .'.'.'.'.'.'.&.&
 314:	d9 26 c5 26 ae 26 94 26 78 26 58 26 35 26 0f 26     .&.&.&.&x&X&5&.&
 324:	e6 25 bb 25 8c 25 5b 25 26 25 ef 24 b4 24 77 24     .%.%.%[%&%.$.$w$
 334:	37 24 f5 23 af 23 67 23 1b 23 ce 22 7d 22 2a 22     7$.#.#g#.#."}"*"
 344:	d4 21 7b 21 20 21 c2 20 62 20 ff 1f 9a 1f 32 1f     .!{! !. b ....2.
 354:	c8 1e 5b 1e ec 1d 7b 1d 07 1d 91 1c 19 1c 9f 1b     ..[...{.........
 364:	22 1b a3 1a 23 1a a0 19 1b 19 95 18 0c 18 82 17     "...#...........
 374:	f5 16 67 16 d7 15 46 15 b3 14 1e 14 87 13 f0 12     ..g...F.........
 384:	56 12 bb 11 1f 11 82 10 e3 0f 43 0f a2 0e ff 0d     V.........C.....
 394:	5c 0d b7 0c 12 0c 6b 0b c4 0a 1c 0a 73 09 c9 08     \.....k.....s...
 3a4:	1f 08 74 07 c8 06 1c 06 6f 05 c2 04 15 04 67 03     ..t.....o.....g.
 3b4:	b9 02 0b 02 5c 01 ae 00 00 00 52 ff a4 fe f5 fd     ....\.....R.....
 3c4:	47 fd 99 fc eb fb 3e fb 91 fa e4 f9 38 f9 8c f8     G.....>.....8...
 3d4:	e1 f7 37 f7 8d f6 e4 f5 3c f5 95 f4 ee f3 49 f3     ..7.....<.....I.
 3e4:	a4 f2 01 f2 5e f1 bd f0 1d f0 7e ef e1 ee 45 ee     ....^.....~...E.
 3f4:	aa ed 10 ed 79 ec e2 eb 4d eb ba ea 29 ea 99 e9     ....y...M...)...
 404:	0b e9 7e e8 f4 e7 6b e7 e5 e6 60 e6 dd e5 5d e5     ..~...k...`...].
 414:	de e4 61 e4 e7 e3 6f e3 f9 e2 85 e2 14 e2 a5 e1     ..a...o.........
 424:	38 e1 ce e0 66 e0 01 e0 9e df 3e df e0 de 85 de     8...f.....>.....
 434:	2c de d6 dd 83 dd 32 dd e5 dc 99 dc 51 dc 0b dc     ,.....2.....Q...
 444:	c9 db 89 db 4c db 11 db da da a5 da 74 da 45 da     ....L.......t.E.
 454:	1a da f1 d9 cb d9 a8 d9 88 d9 6c d9 52 d9 3b d9     ..........l.R.;.
 464:	27 d9 17 d9 09 d9 fe d8 f7 d8 f2 d8 f0 d8 f2 d8     '...............
 474:	f7 d8 fe d8 09 d9 17 d9 27 d9 3b d9 52 d9 6c d9     ........'.;.R.l.
 484:	88 d9 a8 d9 cb d9 f1 d9 1a da 45 da 74 da a5 da     ..........E.t...
 494:	da da 11 db 4c db 89 db c9 db 0b dc 51 dc 99 dc     ....L.......Q...
 4a4:	e5 dc 32 dd 83 dd d6 dd 2c de 85 de e0 de 3e df     ..2.....,.....>.
 4b4:	9e df 01 e0 66 e0 ce e0 38 e1 a5 e1 14 e2 85 e2     ....f...8.......
 4c4:	f9 e2 6f e3 e7 e3 61 e4 de e4 5d e5 dd e5 60 e6     ..o...a...]...`.
 4d4:	e5 e6 6b e7 f4 e7 7e e8 0b e9 99 e9 29 ea ba ea     ..k...~.....)...
 4e4:	4d eb e2 eb 78 ec 10 ed aa ed 45 ee e1 ee 7e ef     M...x.....E...~.
 4f4:	1d f0 bd f0 5e f1 01 f2 a4 f2 49 f3 ee f3 95 f4     ....^.....I.....
 504:	3c f5 e4 f5 8d f6 37 f7 e1 f7 8c f8 38 f9 e4 f9     <.....7.....8...
 514:	91 fa 3e fb eb fb 99 fc 47 fd f5 fd a4 fe 52 ff     ..>.....G.....R.

00000524 <cos_lookup>:
 524:	10 27 0e 27 09 27 02 27 f7 26 e9 26 d9 26 c5 26     .'.'.'.'.&.&.&.&
 534:	ae 26 94 26 78 26 58 26 35 26 0f 26 e6 25 bb 25     .&.&x&X&5&.&.%.%
 544:	8c 25 5b 25 26 25 ef 24 b4 24 77 24 37 24 f5 23     .%[%&%.$.$w$7$.#
 554:	af 23 67 23 1b 23 ce 22 7d 22 2a 22 d4 21 7b 21     .#g#.#."}"*".!{!
 564:	20 21 c2 20 62 20 ff 1f 9a 1f 32 1f c8 1e 5b 1e      !. b ....2...[.
 574:	ec 1d 7b 1d 07 1d 91 1c 19 1c 9f 1b 22 1b a3 1a     ..{........."...
 584:	23 1a a0 19 1b 19 95 18 0c 18 82 17 f5 16 67 16     #.............g.
 594:	d7 15 46 15 b3 14 1e 14 88 13 f0 12 56 12 bb 11     ..F.........V...
 5a4:	1f 11 82 10 e3 0f 43 0f a2 0e ff 0d 5c 0d b7 0c     ......C.....\...
 5b4:	12 0c 6b 0b c4 0a 1c 0a 73 09 c9 08 1f 08 74 07     ..k.....s.....t.
 5c4:	c8 06 1c 06 6f 05 c2 04 15 04 67 03 b9 02 0b 02     ....o.....g.....
 5d4:	5c 01 ae 00 00 00 52 ff a4 fe f5 fd 47 fd 99 fc     \.....R.....G...
 5e4:	eb fb 3e fb 91 fa e4 f9 38 f9 8c f8 e1 f7 37 f7     ..>.....8.....7.
 5f4:	8d f6 e4 f5 3c f5 95 f4 ee f3 49 f3 a4 f2 01 f2     ....<.....I.....
 604:	5e f1 bd f0 1d f0 7e ef e1 ee 45 ee aa ed 10 ed     ^.....~...E.....
 614:	79 ec e2 eb 4d eb ba ea 29 ea 99 e9 0b e9 7e e8     y...M...).....~.
 624:	f4 e7 6b e7 e5 e6 60 e6 dd e5 5d e5 de e4 61 e4     ..k...`...]...a.
 634:	e7 e3 6f e3 f9 e2 85 e2 14 e2 a5 e1 38 e1 ce e0     ..o.........8...
 644:	66 e0 01 e0 9e df 3e df e0 de 85 de 2c de d6 dd     f.....>.....,...
 654:	83 dd 32 dd e5 dc 99 dc 51 dc 0b dc c9 db 89 db     ..2.....Q.......
 664:	4c db 11 db da da a5 da 74 da 45 da 1a da f1 d9     L.......t.E.....
 674:	cb d9 a8 d9 88 d9 6c d9 52 d9 3b d9 27 d9 17 d9     ......l.R.;.'...
 684:	09 d9 fe d8 f7 d8 f2 d8 f0 d8 f2 d8 f7 d8 fe d8     ................
 694:	09 d9 17 d9 27 d9 3b d9 52 d9 6c d9 88 d9 a8 d9     ....'.;.R.l.....
 6a4:	cb d9 f1 d9 1a da 45 da 74 da a5 da da da 11 db     ......E.t.......
 6b4:	4c db 89 db c9 db 0b dc 51 dc 99 dc e5 dc 32 dd     L.......Q.....2.
 6c4:	83 dd d6 dd 2c de 85 de e0 de 3e df 9e df 01 e0     ....,.....>.....
 6d4:	66 e0 ce e0 38 e1 a5 e1 14 e2 85 e2 f9 e2 6f e3     f...8.........o.
 6e4:	e7 e3 61 e4 de e4 5d e5 dd e5 60 e6 e5 e6 6b e7     ..a...]...`...k.
 6f4:	f4 e7 7e e8 0b e9 99 e9 29 ea ba ea 4d eb e2 eb     ..~.....)...M...
 704:	78 ec 10 ed aa ed 45 ee e1 ee 7e ef 1d f0 bd f0     x.....E...~.....
 714:	5e f1 01 f2 a4 f2 49 f3 ee f3 95 f4 3c f5 e4 f5     ^.....I.....<...
 724:	8d f6 37 f7 e1 f7 8c f8 38 f9 e4 f9 91 fa 3e fb     ..7.....8.....>.
 734:	eb fb 99 fc 47 fd f5 fd a4 fe 52 ff 00 00 ae 00     ....G.....R.....
 744:	5c 01 0b 02 b9 02 67 03 15 04 c2 04 6f 05 1c 06     \.....g.....o...
 754:	c8 06 74 07 1f 08 c9 08 73 09 1c 0a c4 0a 6b 0b     ..t.....s.....k.
 764:	12 0c b7 0c 5c 0d ff 0d a2 0e 43 0f e3 0f 82 10     ....\.....C.....
 774:	1f 11 bb 11 56 12 f0 12 88 13 1e 14 b3 14 46 15     ....V.........F.
 784:	d7 15 67 16 f5 16 82 17 0c 18 95 18 1b 19 a0 19     ..g.............
 794:	23 1a a3 1a 22 1b 9f 1b 19 1c 91 1c 07 1d 7b 1d     #...".........{.
 7a4:	ec 1d 5b 1e c8 1e 32 1f 9a 1f ff 1f 62 20 c2 20     ..[...2.....b . 
 7b4:	20 21 7b 21 d4 21 2a 22 7d 22 ce 22 1b 23 67 23      !{!.!*"}".".#g#
 7c4:	af 23 f5 23 37 24 77 24 b4 24 ef 24 26 25 5b 25     .#.#7$w$.$.$&%[%
 7d4:	8c 25 bb 25 e6 25 0f 26 35 26 58 26 78 26 94 26     .%.%.%.&5&X&x&.&
 7e4:	ae 26 c5 26 d9 26 e9 26 f7 26 02 27 09 27 0e 27     .&.&.&.&.&.'.'.'

000007f4 <__ctors_end>:
 7f4:	11 24       	eor	r1, r1
 7f6:	1f be       	out	0x3f, r1	; 63
 7f8:	cf e5       	ldi	r28, 0x5F	; 95
 7fa:	d8 e0       	ldi	r29, 0x08	; 8
 7fc:	de bf       	out	0x3e, r29	; 62
 7fe:	cd bf       	out	0x3d, r28	; 61

00000800 <__do_copy_data>:
 800:	10 e0       	ldi	r17, 0x00	; 0
 802:	a0 e6       	ldi	r26, 0x60	; 96
 804:	b0 e0       	ldi	r27, 0x00	; 0
 806:	ec e0       	ldi	r30, 0x0C	; 12
 808:	fe e0       	ldi	r31, 0x0E	; 14
 80a:	02 c0       	rjmp	.+4      	; 0x810 <__do_copy_data+0x10>
 80c:	05 90       	lpm	r0, Z+
 80e:	0d 92       	st	X+, r0
 810:	a2 38       	cpi	r26, 0x82	; 130
 812:	b1 07       	cpc	r27, r17
 814:	d9 f7       	brne	.-10     	; 0x80c <__do_copy_data+0xc>

00000816 <__do_clear_bss>:
 816:	21 e0       	ldi	r18, 0x01	; 1
 818:	a2 e8       	ldi	r26, 0x82	; 130
 81a:	b0 e0       	ldi	r27, 0x00	; 0
 81c:	01 c0       	rjmp	.+2      	; 0x820 <.do_clear_bss_start>

0000081e <.do_clear_bss_loop>:
 81e:	1d 92       	st	X+, r1

00000820 <.do_clear_bss_start>:
 820:	a2 3a       	cpi	r26, 0xA2	; 162
 822:	b2 07       	cpc	r27, r18
 824:	e1 f7       	brne	.-8      	; 0x81e <.do_clear_bss_loop>
 826:	0e 94 e0 05 	call	0xbc0	; 0xbc0 <main>
 82a:	0c 94 04 07 	jmp	0xe08	; 0xe08 <_exit>

0000082e <__bad_interrupt>:
 82e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000832 <TRANSFORM>:
    }
	return 0;
}

void TRANSFORM()
{
 832:	2f 92       	push	r2
 834:	3f 92       	push	r3
 836:	4f 92       	push	r4
 838:	5f 92       	push	r5
 83a:	6f 92       	push	r6
 83c:	7f 92       	push	r7
 83e:	8f 92       	push	r8
 840:	9f 92       	push	r9
 842:	af 92       	push	r10
 844:	bf 92       	push	r11
 846:	cf 92       	push	r12
 848:	df 92       	push	r13
 84a:	ef 92       	push	r14
 84c:	ff 92       	push	r15
 84e:	0f 93       	push	r16
 850:	1f 93       	push	r17
 852:	cf 93       	push	r28
 854:	df 93       	push	r29
 856:	cd b7       	in	r28, 0x3d	; 61
 858:	de b7       	in	r29, 0x3e	; 62
 85a:	2c 97       	sbiw	r28, 0x0c	; 12
 85c:	0f b6       	in	r0, 0x3f	; 63
 85e:	f8 94       	cli
 860:	de bf       	out	0x3e, r29	; 62
 862:	0f be       	out	0x3f, r0	; 63
 864:	cd bf       	out	0x3d, r28	; 61
 866:	02 e8       	ldi	r16, 0x82	; 130
 868:	10 e0       	ldi	r17, 0x00	; 0
 86a:	84 e5       	ldi	r24, 0x54	; 84
 86c:	90 e0       	ldi	r25, 0x00	; 0
 86e:	9a 87       	std	Y+10, r25	; 0x0a
 870:	89 87       	std	Y+9, r24	; 0x09
 872:	0f 2e       	mov	r0, r31
 874:	f2 e8       	ldi	r31, 0x82	; 130
 876:	2f 2e       	mov	r2, r31
 878:	f1 e0       	ldi	r31, 0x01	; 1
 87a:	3f 2e       	mov	r3, r31
 87c:	f0 2d       	mov	r31, r0
 87e:	7f c0       	rjmp	.+254    	; 0x97e <__stack+0x11f>
	int16_t count,degree;
	uint8_t u,k;
	count = 0;
	for (u=0; u<N/2; u++) {
		for (k=0; k<N; k++) {
			degree = (uint16_t)pgm_read_byte_near(degree_lookup + count)*2;
 880:	f7 01       	movw	r30, r14
 882:	64 90       	lpm	r6, Z
			count++;
			Fu[u][0] +=  fx[k] * (int16_t)pgm_read_word_near(cos_lookup + degree);
 884:	f6 01       	movw	r30, r12
 886:	81 91       	ld	r24, Z+
 888:	91 91       	ld	r25, Z+
 88a:	a1 91       	ld	r26, Z+
 88c:	b1 91       	ld	r27, Z+
 88e:	6f 01       	movw	r12, r30
 890:	8b 83       	std	Y+3, r24	; 0x03
 892:	9c 83       	std	Y+4, r25	; 0x04
 894:	ad 83       	std	Y+5, r26	; 0x05
 896:	be 83       	std	Y+6, r27	; 0x06
 898:	71 2c       	mov	r7, r1
 89a:	c3 01       	movw	r24, r6
 89c:	88 0f       	add	r24, r24
 89e:	99 1f       	adc	r25, r25
 8a0:	88 0f       	add	r24, r24
 8a2:	99 1f       	adc	r25, r25
 8a4:	9c 87       	std	Y+12, r25	; 0x0c
 8a6:	8b 87       	std	Y+11, r24	; 0x0b
 8a8:	fc 01       	movw	r30, r24
 8aa:	ec 5d       	subi	r30, 0xDC	; 220
 8ac:	fa 4f       	sbci	r31, 0xFA	; 250
 8ae:	a5 91       	lpm	r26, Z+
 8b0:	b4 91       	lpm	r27, Z
 8b2:	9f 81       	ldd	r25, Y+7	; 0x07
 8b4:	99 83       	std	Y+1, r25	; 0x01
 8b6:	e8 85       	ldd	r30, Y+8	; 0x08
 8b8:	ea 83       	std	Y+2, r30	; 0x02
 8ba:	2b 81       	ldd	r18, Y+3	; 0x03
 8bc:	3c 81       	ldd	r19, Y+4	; 0x04
 8be:	4d 81       	ldd	r20, Y+5	; 0x05
 8c0:	5e 81       	ldd	r21, Y+6	; 0x06
 8c2:	0e 94 c0 06 	call	0xd80	; 0xd80 <__mulshisi3>
 8c6:	d8 01       	movw	r26, r16
 8c8:	8d 90       	ld	r8, X+
 8ca:	9d 90       	ld	r9, X+
 8cc:	ad 90       	ld	r10, X+
 8ce:	bc 90       	ld	r11, X
 8d0:	86 0e       	add	r8, r22
 8d2:	97 1e       	adc	r9, r23
 8d4:	a8 1e       	adc	r10, r24
 8d6:	b9 1e       	adc	r11, r25
 8d8:	f8 01       	movw	r30, r16
 8da:	80 82       	st	Z, r8
 8dc:	91 82       	std	Z+1, r9	; 0x01
 8de:	a2 82       	std	Z+2, r10	; 0x02
 8e0:	b3 82       	std	Z+3, r11	; 0x03
			Fu[u][1] += -fx[k] * (int16_t)pgm_read_word_near(sin_lookup + degree);
 8e2:	eb 85       	ldd	r30, Y+11	; 0x0b
 8e4:	fc 85       	ldd	r31, Y+12	; 0x0c
 8e6:	ec 5a       	subi	r30, 0xAC	; 172
 8e8:	fd 4f       	sbci	r31, 0xFD	; 253
 8ea:	a5 91       	lpm	r26, Z+
 8ec:	b4 91       	lpm	r27, Z
 8ee:	50 95       	com	r21
 8f0:	40 95       	com	r20
 8f2:	30 95       	com	r19
 8f4:	21 95       	neg	r18
 8f6:	3f 4f       	sbci	r19, 0xFF	; 255
 8f8:	4f 4f       	sbci	r20, 0xFF	; 255
 8fa:	5f 4f       	sbci	r21, 0xFF	; 255
 8fc:	0e 94 c0 06 	call	0xd80	; 0xd80 <__mulshisi3>
 900:	d8 01       	movw	r26, r16
 902:	14 96       	adiw	r26, 0x04	; 4
 904:	4d 90       	ld	r4, X+
 906:	5d 90       	ld	r5, X+
 908:	6d 90       	ld	r6, X+
 90a:	7c 90       	ld	r7, X
 90c:	17 97       	sbiw	r26, 0x07	; 7
 90e:	46 0e       	add	r4, r22
 910:	57 1e       	adc	r5, r23
 912:	68 1e       	adc	r6, r24
 914:	79 1e       	adc	r7, r25
 916:	f8 01       	movw	r30, r16
 918:	44 82       	std	Z+4, r4	; 0x04
 91a:	55 82       	std	Z+5, r5	; 0x05
 91c:	66 82       	std	Z+6, r6	; 0x06
 91e:	77 82       	std	Z+7, r7	; 0x07
 920:	ff ef       	ldi	r31, 0xFF	; 255
 922:	ef 1a       	sub	r14, r31
 924:	ff 0a       	sbc	r15, r31
{
	int16_t count,degree;
	uint8_t u,k;
	count = 0;
	for (u=0; u<N/2; u++) {
		for (k=0; k<N; k++) {
 926:	2c 14       	cp	r2, r12
 928:	3d 04       	cpc	r3, r13
 92a:	09 f0       	breq	.+2      	; 0x92e <__stack+0xcf>
 92c:	a9 cf       	rjmp	.-174    	; 0x880 <__stack+0x21>
			count++;
			Fu[u][0] +=  fx[k] * (int16_t)pgm_read_word_near(cos_lookup + degree);
			Fu[u][1] += -fx[k] * (int16_t)pgm_read_word_near(sin_lookup + degree);
		}
		Fu[u][0] /= N;
		Fu[u][0] /= 10000;
 92e:	c5 01       	movw	r24, r10
 930:	b4 01       	movw	r22, r8
 932:	20 e0       	ldi	r18, 0x00	; 0
 934:	32 ee       	ldi	r19, 0xE2	; 226
 936:	44 e0       	ldi	r20, 0x04	; 4
 938:	50 e0       	ldi	r21, 0x00	; 0
 93a:	0e 94 a1 06 	call	0xd42	; 0xd42 <__divmodsi4>
 93e:	a9 81       	ldd	r26, Y+1	; 0x01
 940:	ba 81       	ldd	r27, Y+2	; 0x02
 942:	2d 93       	st	X+, r18
 944:	3d 93       	st	X+, r19
 946:	4d 93       	st	X+, r20
 948:	5c 93       	st	X, r21
 94a:	13 97       	sbiw	r26, 0x03	; 3
		Fu[u][1] /= N;
		Fu[u][1] /= 10000;
 94c:	c3 01       	movw	r24, r6
 94e:	b2 01       	movw	r22, r4
 950:	20 e0       	ldi	r18, 0x00	; 0
 952:	32 ee       	ldi	r19, 0xE2	; 226
 954:	44 e0       	ldi	r20, 0x04	; 4
 956:	50 e0       	ldi	r21, 0x00	; 0
 958:	0e 94 a1 06 	call	0xd42	; 0xd42 <__divmodsi4>
 95c:	e9 81       	ldd	r30, Y+1	; 0x01
 95e:	fa 81       	ldd	r31, Y+2	; 0x02
 960:	24 83       	std	Z+4, r18	; 0x04
 962:	35 83       	std	Z+5, r19	; 0x05
 964:	46 83       	std	Z+6, r20	; 0x06
 966:	57 83       	std	Z+7, r21	; 0x07
 968:	08 5f       	subi	r16, 0xF8	; 248
 96a:	1f 4f       	sbci	r17, 0xFF	; 255
 96c:	89 85       	ldd	r24, Y+9	; 0x09
 96e:	9a 85       	ldd	r25, Y+10	; 0x0a
 970:	80 96       	adiw	r24, 0x20	; 32
 972:	9a 87       	std	Y+10, r25	; 0x0a
 974:	89 87       	std	Y+9, r24	; 0x09
void TRANSFORM()
{
	int16_t count,degree;
	uint8_t u,k;
	count = 0;
	for (u=0; u<N/2; u++) {
 976:	91 e0       	ldi	r25, 0x01	; 1
 978:	02 30       	cpi	r16, 0x02	; 2
 97a:	19 07       	cpc	r17, r25
 97c:	59 f0       	breq	.+22     	; 0x994 <__stack+0x135>
 97e:	0f 2e       	mov	r0, r31
 980:	f2 e0       	ldi	r31, 0x02	; 2
 982:	cf 2e       	mov	r12, r31
 984:	f1 e0       	ldi	r31, 0x01	; 1
 986:	df 2e       	mov	r13, r31
 988:	f0 2d       	mov	r31, r0
    }
	return 0;
}

void TRANSFORM()
{
 98a:	e9 84       	ldd	r14, Y+9	; 0x09
 98c:	fa 84       	ldd	r15, Y+10	; 0x0a
 98e:	0f 83       	std	Y+7, r16	; 0x07
 990:	18 87       	std	Y+8, r17	; 0x08
 992:	76 cf       	rjmp	.-276    	; 0x880 <__stack+0x21>
		Fu[u][0] /= N;
		Fu[u][0] /= 10000;
		Fu[u][1] /= N;
		Fu[u][1] /= 10000;
	}
}
 994:	2c 96       	adiw	r28, 0x0c	; 12
 996:	0f b6       	in	r0, 0x3f	; 63
 998:	f8 94       	cli
 99a:	de bf       	out	0x3e, r29	; 62
 99c:	0f be       	out	0x3f, r0	; 63
 99e:	cd bf       	out	0x3d, r28	; 61
 9a0:	df 91       	pop	r29
 9a2:	cf 91       	pop	r28
 9a4:	1f 91       	pop	r17
 9a6:	0f 91       	pop	r16
 9a8:	ff 90       	pop	r15
 9aa:	ef 90       	pop	r14
 9ac:	df 90       	pop	r13
 9ae:	cf 90       	pop	r12
 9b0:	bf 90       	pop	r11
 9b2:	af 90       	pop	r10
 9b4:	9f 90       	pop	r9
 9b6:	8f 90       	pop	r8
 9b8:	7f 90       	pop	r7
 9ba:	6f 90       	pop	r6
 9bc:	5f 90       	pop	r5
 9be:	4f 90       	pop	r4
 9c0:	3f 90       	pop	r3
 9c2:	2f 90       	pop	r2
 9c4:	08 95       	ret

000009c6 <LCD_STROBE>:
}


void LCD_STROBE(void)
{
	PORTD |= (1 << EN);
 9c6:	96 9a       	sbi	0x12, 6	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 9c8:	85 e0       	ldi	r24, 0x05	; 5
 9ca:	8a 95       	dec	r24
 9cc:	f1 f7       	brne	.-4      	; 0x9ca <LCD_STROBE+0x4>
 9ce:	00 00       	nop
	_delay_us(1);
	PORTD &= ~(1 << EN);
 9d0:	96 98       	cbi	0x12, 6	; 18
 9d2:	08 95       	ret

000009d4 <lcd_cmd>:
	lcd_cmd(0x6);
}


void lcd_cmd(unsigned char c)
{
 9d4:	cf 93       	push	r28
 9d6:	c8 2f       	mov	r28, r24

	PORTD &= ~(1 << RS);
 9d8:	95 98       	cbi	0x12, 5	; 18
 9da:	87 ec       	ldi	r24, 0xC7	; 199
 9dc:	90 e0       	ldi	r25, 0x00	; 0
 9de:	01 97       	sbiw	r24, 0x01	; 1
 9e0:	f1 f7       	brne	.-4      	; 0x9de <lcd_cmd+0xa>
 9e2:	00 c0       	rjmp	.+0      	; 0x9e4 <lcd_cmd+0x10>
 9e4:	00 00       	nop
	_delay_us(50);
	LCD_NIBBLE = ( c >> 4) | (LCD_NIBBLE&0XF0);
 9e6:	85 b3       	in	r24, 0x15	; 21
 9e8:	9c 2f       	mov	r25, r28
 9ea:	92 95       	swap	r25
 9ec:	9f 70       	andi	r25, 0x0F	; 15
 9ee:	80 7f       	andi	r24, 0xF0	; 240
 9f0:	89 2b       	or	r24, r25
 9f2:	85 bb       	out	0x15, r24	; 21
	LCD_STROBE();
 9f4:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <LCD_STROBE>
	LCD_NIBBLE = (c)|(LCD_NIBBLE&0XF0);
 9f8:	85 b3       	in	r24, 0x15	; 21
 9fa:	80 7f       	andi	r24, 0xF0	; 240
 9fc:	c8 2b       	or	r28, r24
 9fe:	c5 bb       	out	0x15, r28	; 21
	LCD_STROBE();
 a00:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <LCD_STROBE>

}
 a04:	cf 91       	pop	r28
 a06:	08 95       	ret

00000a08 <lcd_clear>:
}


void lcd_clear(void)
{
	lcd_cmd(0x01);
 a08:	81 e0       	ldi	r24, 0x01	; 1
 a0a:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <lcd_cmd>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 a0e:	8f e1       	ldi	r24, 0x1F	; 31
 a10:	9e e4       	ldi	r25, 0x4E	; 78
 a12:	01 97       	sbiw	r24, 0x01	; 1
 a14:	f1 f7       	brne	.-4      	; 0xa12 <lcd_clear+0xa>
 a16:	00 c0       	rjmp	.+0      	; 0xa18 <lcd_clear+0x10>
 a18:	00 00       	nop
 a1a:	08 95       	ret

00000a1c <lcd_init>:
	}
}

void lcd_init()
{
	DDRC = 0b00001111;
 a1c:	8f e0       	ldi	r24, 0x0F	; 15
 a1e:	84 bb       	out	0x14, r24	; 20
	DDRD |= (1 << RS)|(1 << EN);
 a20:	81 b3       	in	r24, 0x11	; 17
 a22:	80 66       	ori	r24, 0x60	; 96
 a24:	81 bb       	out	0x11, r24	; 17
	PORTC |= (1<<PC4);
 a26:	ac 9a       	sbi	0x15, 4	; 21
 a28:	8f e5       	ldi	r24, 0x5F	; 95
 a2a:	9a ee       	ldi	r25, 0xEA	; 234
 a2c:	01 97       	sbiw	r24, 0x01	; 1
 a2e:	f1 f7       	brne	.-4      	; 0xa2c <lcd_init+0x10>
 a30:	00 c0       	rjmp	.+0      	; 0xa32 <lcd_init+0x16>
 a32:	00 00       	nop
	_delay_ms(15);
	lcd_cmd(0x30);
 a34:	80 e3       	ldi	r24, 0x30	; 48
 a36:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <lcd_cmd>
 a3a:	8f e9       	ldi	r24, 0x9F	; 159
 a3c:	9f e0       	ldi	r25, 0x0F	; 15
 a3e:	01 97       	sbiw	r24, 0x01	; 1
 a40:	f1 f7       	brne	.-4      	; 0xa3e <lcd_init+0x22>
 a42:	00 c0       	rjmp	.+0      	; 0xa44 <lcd_init+0x28>
 a44:	00 00       	nop
	_delay_ms(1);
	lcd_cmd(0x30);
 a46:	80 e3       	ldi	r24, 0x30	; 48
 a48:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <lcd_cmd>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 a4c:	8f e8       	ldi	r24, 0x8F	; 143
 a4e:	91 e0       	ldi	r25, 0x01	; 1
 a50:	01 97       	sbiw	r24, 0x01	; 1
 a52:	f1 f7       	brne	.-4      	; 0xa50 <lcd_init+0x34>
 a54:	00 c0       	rjmp	.+0      	; 0xa56 <lcd_init+0x3a>
 a56:	00 00       	nop
	_delay_us(100);
	lcd_cmd(0x30);
 a58:	80 e3       	ldi	r24, 0x30	; 48
 a5a:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <lcd_cmd>
	lcd_cmd(0x28);
 a5e:	88 e2       	ldi	r24, 0x28	; 40
 a60:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <lcd_cmd>
	lcd_cmd(0x28);
 a64:	88 e2       	ldi	r24, 0x28	; 40
 a66:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <lcd_cmd>
	lcd_cmd(0x0c);
 a6a:	8c e0       	ldi	r24, 0x0C	; 12
 a6c:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <lcd_cmd>
	lcd_clear();
 a70:	0e 94 04 05 	call	0xa08	; 0xa08 <lcd_clear>
	lcd_cmd(0x6);
 a74:	86 e0       	ldi	r24, 0x06	; 6
 a76:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <lcd_cmd>
 a7a:	08 95       	ret

00000a7c <lcd_data>:
	}
}


void lcd_data(unsigned char	c)
{
 a7c:	cf 93       	push	r28
 a7e:	c8 2f       	mov	r28, r24
	PORTD |= (1 << RS);
 a80:	95 9a       	sbi	0x12, 5	; 18
 a82:	87 ec       	ldi	r24, 0xC7	; 199
 a84:	90 e0       	ldi	r25, 0x00	; 0
 a86:	01 97       	sbiw	r24, 0x01	; 1
 a88:	f1 f7       	brne	.-4      	; 0xa86 <lcd_data+0xa>
 a8a:	00 c0       	rjmp	.+0      	; 0xa8c <lcd_data+0x10>
 a8c:	00 00       	nop
	_delay_us(50);
	LCD_NIBBLE = (c >> 4)|(LCD_NIBBLE & 0xf0);
 a8e:	85 b3       	in	r24, 0x15	; 21
 a90:	9c 2f       	mov	r25, r28
 a92:	92 95       	swap	r25
 a94:	9f 70       	andi	r25, 0x0F	; 15
 a96:	80 7f       	andi	r24, 0xF0	; 240
 a98:	89 2b       	or	r24, r25
 a9a:	85 bb       	out	0x15, r24	; 21
	LCD_STROBE();
 a9c:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <LCD_STROBE>
	LCD_NIBBLE = (c) | (LCD_NIBBLE & 0XF0);
 aa0:	85 b3       	in	r24, 0x15	; 21
 aa2:	80 7f       	andi	r24, 0xF0	; 240
 aa4:	c8 2b       	or	r28, r24
 aa6:	c5 bb       	out	0x15, r28	; 21
	LCD_STROBE();
 aa8:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <LCD_STROBE>
}
 aac:	cf 91       	pop	r28
 aae:	08 95       	ret

00000ab0 <lcd_fill_custom>:
	lcd_cmd(0x01);
	_delay_ms(5);
}

void lcd_fill_custom()
{
 ab0:	1f 93       	push	r17
 ab2:	cf 93       	push	r28
 ab4:	df 93       	push	r29
	uint8_t i,j;
	i=0;j=0;
	lcd_cmd(64);
 ab6:	80 e4       	ldi	r24, 0x40	; 64
 ab8:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <lcd_cmd>
 abc:	12 e0       	ldi	r17, 0x02	; 2
 abe:	d1 e0       	ldi	r29, 0x01	; 1
 ac0:	13 c0       	rjmp	.+38     	; 0xae8 <lcd_fill_custom+0x38>
	for (i=1 ; i<=8 ; i++)
	{
		for(j=8 ; j>i ; j--)
 ac2:	c8 e0       	ldi	r28, 0x08	; 8
		lcd_data(0x00);
 ac4:	80 e0       	ldi	r24, 0x00	; 0
 ac6:	0e 94 3e 05 	call	0xa7c	; 0xa7c <lcd_data>
	uint8_t i,j;
	i=0;j=0;
	lcd_cmd(64);
	for (i=1 ; i<=8 ; i++)
	{
		for(j=8 ; j>i ; j--)
 aca:	c1 50       	subi	r28, 0x01	; 1
 acc:	cd 13       	cpse	r28, r29
 ace:	fa cf       	rjmp	.-12     	; 0xac4 <lcd_fill_custom+0x14>
		lcd_data(0x00);
		for (j=i ; j>0 ; j--)
 ad0:	dd 23       	and	r29, r29
 ad2:	41 f0       	breq	.+16     	; 0xae4 <lcd_fill_custom+0x34>
 ad4:	cd 2f       	mov	r28, r29
		lcd_data(0xff);
 ad6:	8f ef       	ldi	r24, 0xFF	; 255
 ad8:	0e 94 3e 05 	call	0xa7c	; 0xa7c <lcd_data>
	lcd_cmd(64);
	for (i=1 ; i<=8 ; i++)
	{
		for(j=8 ; j>i ; j--)
		lcd_data(0x00);
		for (j=i ; j>0 ; j--)
 adc:	c1 50       	subi	r28, 0x01	; 1
 ade:	d9 f7       	brne	.-10     	; 0xad6 <lcd_fill_custom+0x26>
void lcd_fill_custom()
{
	uint8_t i,j;
	i=0;j=0;
	lcd_cmd(64);
	for (i=1 ; i<=8 ; i++)
 ae0:	19 30       	cpi	r17, 0x09	; 9
 ae2:	28 f4       	brcc	.+10     	; 0xaee <lcd_fill_custom+0x3e>
 ae4:	1f 5f       	subi	r17, 0xFF	; 255
 ae6:	df 5f       	subi	r29, 0xFF	; 255
	{
		for(j=8 ; j>i ; j--)
 ae8:	d8 30       	cpi	r29, 0x08	; 8
 aea:	58 f3       	brcs	.-42     	; 0xac2 <lcd_fill_custom+0x12>
 aec:	f1 cf       	rjmp	.-30     	; 0xad0 <lcd_fill_custom+0x20>
		lcd_data(0x00);
		for (j=i ; j>0 ; j--)
		lcd_data(0xff);
	}
}
 aee:	df 91       	pop	r29
 af0:	cf 91       	pop	r28
 af2:	1f 91       	pop	r17
 af4:	08 95       	ret

00000af6 <lcd_print>:
	LCD_NIBBLE = (c) | (LCD_NIBBLE & 0XF0);
	LCD_STROBE();
}

void lcd_print(char *p , char l)
{
 af6:	cf 93       	push	r28
 af8:	df 93       	push	r29
 afa:	ec 01       	movw	r28, r24
	if (l==1)lcd_cmd(0x80);
 afc:	61 30       	cpi	r22, 0x01	; 1
 afe:	21 f4       	brne	.+8      	; 0xb08 <lcd_print+0x12>
 b00:	80 e8       	ldi	r24, 0x80	; 128
 b02:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <lcd_cmd>
 b06:	03 c0       	rjmp	.+6      	; 0xb0e <lcd_print+0x18>
	else lcd_cmd(0xc0);
 b08:	80 ec       	ldi	r24, 0xC0	; 192
 b0a:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <lcd_cmd>
	while(*p)
 b0e:	88 81       	ld	r24, Y
 b10:	88 23       	and	r24, r24
 b12:	31 f0       	breq	.+12     	; 0xb20 <lcd_print+0x2a>
 b14:	21 96       	adiw	r28, 0x01	; 1
	lcd_data(*p++);
 b16:	0e 94 3e 05 	call	0xa7c	; 0xa7c <lcd_data>

void lcd_print(char *p , char l)
{
	if (l==1)lcd_cmd(0x80);
	else lcd_cmd(0xc0);
	while(*p)
 b1a:	89 91       	ld	r24, Y+
 b1c:	81 11       	cpse	r24, r1
 b1e:	fb cf       	rjmp	.-10     	; 0xb16 <lcd_print+0x20>
	lcd_data(*p++);
}
 b20:	df 91       	pop	r29
 b22:	cf 91       	pop	r28
 b24:	08 95       	ret

00000b26 <timer1_init>:



void timer1_init()
{
	TCCR1B = (1<<WGM12) | (1<<CS10);
 b26:	89 e0       	ldi	r24, 0x09	; 9
 b28:	8e bd       	out	0x2e, r24	; 46
	OCR1A = 800;
 b2a:	80 e2       	ldi	r24, 0x20	; 32
 b2c:	93 e0       	ldi	r25, 0x03	; 3
 b2e:	9b bd       	out	0x2b, r25	; 43
 b30:	8a bd       	out	0x2a, r24	; 42
 b32:	08 95       	ret

00000b34 <adc_init>:


void adc_init()
{

	ADMUX = 0b11000000;
 b34:	80 ec       	ldi	r24, 0xC0	; 192
 b36:	87 b9       	out	0x07, r24	; 7
	ADCSRA = 0b10000000;
 b38:	80 e8       	ldi	r24, 0x80	; 128
 b3a:	86 b9       	out	0x06, r24	; 6
 b3c:	08 95       	ret

00000b3e <adc_read>:

}

uint16_t adc_read()
{
 b3e:	cf 93       	push	r28
 b40:	df 93       	push	r29
 b42:	00 d0       	rcall	.+0      	; 0xb44 <adc_read+0x6>
 b44:	00 d0       	rcall	.+0      	; 0xb46 <adc_read+0x8>
 b46:	cd b7       	in	r28, 0x3d	; 61
 b48:	de b7       	in	r29, 0x3e	; 62
	volatile uint16_t retl,reth;
	ADCSRA |= 1<<ADSC;
 b4a:	36 9a       	sbi	0x06, 6	; 6
	while(!ADIF);
	ADCSRA |= 1<<ADIF;
 b4c:	34 9a       	sbi	0x06, 4	; 6
	retl = ADCL;
 b4e:	84 b1       	in	r24, 0x04	; 4
 b50:	90 e0       	ldi	r25, 0x00	; 0
 b52:	9a 83       	std	Y+2, r25	; 0x02
 b54:	89 83       	std	Y+1, r24	; 0x01
	reth = ADCH;
 b56:	85 b1       	in	r24, 0x05	; 5
 b58:	90 e0       	ldi	r25, 0x00	; 0
 b5a:	9c 83       	std	Y+4, r25	; 0x04
 b5c:	8b 83       	std	Y+3, r24	; 0x03
	reth<<=8;
 b5e:	8b 81       	ldd	r24, Y+3	; 0x03
 b60:	9c 81       	ldd	r25, Y+4	; 0x04
 b62:	98 2f       	mov	r25, r24
 b64:	88 27       	eor	r24, r24
 b66:	9c 83       	std	Y+4, r25	; 0x04
 b68:	8b 83       	std	Y+3, r24	; 0x03
	reth|=retl;
 b6a:	29 81       	ldd	r18, Y+1	; 0x01
 b6c:	3a 81       	ldd	r19, Y+2	; 0x02
 b6e:	8b 81       	ldd	r24, Y+3	; 0x03
 b70:	9c 81       	ldd	r25, Y+4	; 0x04
 b72:	82 2b       	or	r24, r18
 b74:	93 2b       	or	r25, r19
 b76:	9c 83       	std	Y+4, r25	; 0x04
 b78:	8b 83       	std	Y+3, r24	; 0x03
	return reth;
 b7a:	8b 81       	ldd	r24, Y+3	; 0x03
 b7c:	9c 81       	ldd	r25, Y+4	; 0x04
}
 b7e:	0f 90       	pop	r0
 b80:	0f 90       	pop	r0
 b82:	0f 90       	pop	r0
 b84:	0f 90       	pop	r0
 b86:	df 91       	pop	r29
 b88:	cf 91       	pop	r28
 b8a:	08 95       	ret

00000b8c <B0_Blink>:



void B0_Blink()
{
	PORTB = 0x01;
 b8c:	81 e0       	ldi	r24, 0x01	; 1
 b8e:	88 bb       	out	0x18, r24	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 b90:	2f ef       	ldi	r18, 0xFF	; 255
 b92:	89 e6       	ldi	r24, 0x69	; 105
 b94:	98 e1       	ldi	r25, 0x18	; 24
 b96:	21 50       	subi	r18, 0x01	; 1
 b98:	80 40       	sbci	r24, 0x00	; 0
 b9a:	90 40       	sbci	r25, 0x00	; 0
 b9c:	e1 f7       	brne	.-8      	; 0xb96 <B0_Blink+0xa>
 b9e:	00 c0       	rjmp	.+0      	; 0xba0 <B0_Blink+0x14>
 ba0:	00 00       	nop
	_delay_ms(500);
	PORTB = 0x00;
 ba2:	18 ba       	out	0x18, r1	; 24
 ba4:	08 95       	ret

00000ba6 <B1_Blink>:
}

void B1_Blink()
{
	PORTB = 0x02;
 ba6:	82 e0       	ldi	r24, 0x02	; 2
 ba8:	88 bb       	out	0x18, r24	; 24
 baa:	2f ef       	ldi	r18, 0xFF	; 255
 bac:	89 e6       	ldi	r24, 0x69	; 105
 bae:	98 e1       	ldi	r25, 0x18	; 24
 bb0:	21 50       	subi	r18, 0x01	; 1
 bb2:	80 40       	sbci	r24, 0x00	; 0
 bb4:	90 40       	sbci	r25, 0x00	; 0
 bb6:	e1 f7       	brne	.-8      	; 0xbb0 <B1_Blink+0xa>
 bb8:	00 c0       	rjmp	.+0      	; 0xbba <B1_Blink+0x14>
 bba:	00 00       	nop
	_delay_ms(500);
	PORTB = 0x00;
 bbc:	18 ba       	out	0x18, r1	; 24
 bbe:	08 95       	ret

00000bc0 <main>:

	uint8_t mag;
	int i;


	DDRB = 0b0000111;
 bc0:	87 e0       	ldi	r24, 0x07	; 7
 bc2:	87 bb       	out	0x17, r24	; 23
	lcd_init();
 bc4:	0e 94 0e 05 	call	0xa1c	; 0xa1c <lcd_init>
	lcd_fill_custom();
 bc8:	0e 94 58 05 	call	0xab0	; 0xab0 <lcd_fill_custom>
	B0_Blink();
 bcc:	0e 94 c6 05 	call	0xb8c	; 0xb8c <B0_Blink>

	adc_init();
 bd0:	0e 94 9a 05 	call	0xb34	; 0xb34 <adc_init>
	B1_Blink();
 bd4:	0e 94 d3 05 	call	0xba6	; 0xba6 <B1_Blink>

	timer1_init();
 bd8:	0e 94 93 05 	call	0xb26	; 0xb26 <timer1_init>
	B0_Blink();
 bdc:	0e 94 c6 05 	call	0xb8c	; 0xb8c <B0_Blink>


	lcd_print("DFT SPECTROMETER",1);
 be0:	61 e0       	ldi	r22, 0x01	; 1
 be2:	80 e6       	ldi	r24, 0x60	; 96
 be4:	90 e0       	ldi	r25, 0x00	; 0
 be6:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <lcd_print>
	lcd_print("0Hz - 10KHz(16)",2);
 bea:	62 e0       	ldi	r22, 0x02	; 2
 bec:	81 e7       	ldi	r24, 0x71	; 113
 bee:	90 e0       	ldi	r25, 0x00	; 0
 bf0:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <lcd_print>
	B0_Blink();
 bf4:	0e 94 c6 05 	call	0xb8c	; 0xb8c <B0_Blink>
	B1_Blink();
 bf8:	0e 94 d3 05 	call	0xba6	; 0xba6 <B1_Blink>
	lcd_clear();
 bfc:	0e 94 04 05 	call	0xa08	; 0xa08 <lcd_clear>
 c00:	02 e8       	ldi	r16, 0x82	; 130
 c02:	11 e0       	ldi	r17, 0x01	; 1
 c04:	0f 2e       	mov	r0, r31
 c06:	f2 e0       	ldi	r31, 0x02	; 2
 c08:	af 2e       	mov	r10, r31
 c0a:	f1 e0       	ldi	r31, 0x01	; 1
 c0c:	bf 2e       	mov	r11, r31
 c0e:	f0 2d       	mov	r31, r0
				if(lcd_buf1[i] > 7)
				lcd_buf1[i] = 7;
				lcd_buf2[i] = 7;
			}
			else {
				lcd_buf1[i] = ' ';
 c10:	68 94       	set
 c12:	66 24       	eor	r6, r6
 c14:	65 f8       	bld	r6, 5
			mag = (uint8_t)(Fu[i][0] + Fu[i][1])/4;
			if((mag)>7) {
				lcd_buf1[i] = (mag) - 7 - 1;
				if(lcd_buf1[i] > 7)
				lcd_buf1[i] = 7;
				lcd_buf2[i] = 7;
 c16:	0f 2e       	mov	r0, r31
 c18:	f7 e0       	ldi	r31, 0x07	; 7
 c1a:	7f 2e       	mov	r7, r31
 c1c:	f0 2d       	mov	r31, r0
 c1e:	0f 2e       	mov	r0, r31
 c20:	f2 e9       	ldi	r31, 0x92	; 146
 c22:	cf 2e       	mov	r12, r31
 c24:	f1 e0       	ldi	r31, 0x01	; 1
 c26:	df 2e       	mov	r13, r31
 c28:	f0 2d       	mov	r31, r0
 c2a:	0f 2e       	mov	r0, r31
 c2c:	f2 ea       	ldi	r31, 0xA2	; 162
 c2e:	ef 2e       	mov	r14, r31
 c30:	f1 e0       	ldi	r31, 0x01	; 1
 c32:	ff 2e       	mov	r15, r31
 c34:	f0 2d       	mov	r31, r0
	lcd_clear();


    while (1) 
    {
	TCNT1 = 0;
 c36:	1d bc       	out	0x2d, r1	; 45
 c38:	1c bc       	out	0x2c, r1	; 44
	TIFR |= 1<<OCF1A;
 c3a:	88 b7       	in	r24, 0x38	; 56
 c3c:	80 61       	ori	r24, 0x10	; 16
 c3e:	88 bf       	out	0x38, r24	; 56
 c40:	c2 e0       	ldi	r28, 0x02	; 2
 c42:	d1 e0       	ldi	r29, 0x01	; 1
	for ( i = 0 ; i < N ; i++)
	{
		while( (TIFR & ( 1 << OCF1A )) == 0);
 c44:	08 b6       	in	r0, 0x38	; 56
 c46:	04 fe       	sbrs	r0, 4
 c48:	fd cf       	rjmp	.-6      	; 0xc44 <main+0x84>
		fx[i] = ( (int16_t) adc_read() );
 c4a:	0e 94 9f 05 	call	0xb3e	; 0xb3e <adc_read>
 c4e:	09 2e       	mov	r0, r25
 c50:	00 0c       	add	r0, r0
 c52:	aa 0b       	sbc	r26, r26
 c54:	bb 0b       	sbc	r27, r27
 c56:	89 93       	st	Y+, r24
 c58:	99 93       	st	Y+, r25
 c5a:	a9 93       	st	Y+, r26
 c5c:	b9 93       	st	Y+, r27
		TIFR |= 1<<OCF1A;
 c5e:	88 b7       	in	r24, 0x38	; 56
 c60:	80 61       	ori	r24, 0x10	; 16
 c62:	88 bf       	out	0x38, r24	; 56

    while (1) 
    {
	TCNT1 = 0;
	TIFR |= 1<<OCF1A;
	for ( i = 0 ; i < N ; i++)
 c64:	c0 17       	cp	r28, r16
 c66:	d1 07       	cpc	r29, r17
 c68:	69 f7       	brne	.-38     	; 0xc44 <main+0x84>
		TIFR |= 1<<OCF1A;


	}

	TRANSFORM();
 c6a:	0e 94 19 04 	call	0x832	; 0x832 <TRANSFORM>
	lcd_cmd(0xc0);
 c6e:	80 ec       	ldi	r24, 0xC0	; 192
 c70:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <lcd_cmd>
 c74:	ea e8       	ldi	r30, 0x8A	; 138
 c76:	f0 e0       	ldi	r31, 0x00	; 0
 c78:	c3 e9       	ldi	r28, 0x93	; 147
 c7a:	d1 e0       	ldi	r29, 0x01	; 1
 c7c:	0f 2e       	mov	r0, r31
 c7e:	f3 e8       	ldi	r31, 0x83	; 131
 c80:	8f 2e       	mov	r8, r31
 c82:	f1 e0       	ldi	r31, 0x01	; 1
 c84:	9f 2e       	mov	r9, r31
 c86:	f0 2d       	mov	r31, r0
 c88:	94 01       	movw	r18, r8
 c8a:	ce 01       	movw	r24, r28
 c8c:	df 01       	movw	r26, r30
		for(i =1; i<N/2; i++) {
			if(Fu[i][0]<0)Fu[i][0]*=-1;
 c8e:	40 81       	ld	r20, Z
 c90:	51 81       	ldd	r21, Z+1	; 0x01
 c92:	62 81       	ldd	r22, Z+2	; 0x02
 c94:	73 81       	ldd	r23, Z+3	; 0x03
 c96:	77 23       	and	r23, r23
 c98:	5c f4       	brge	.+22     	; 0xcb0 <main+0xf0>
 c9a:	70 95       	com	r23
 c9c:	60 95       	com	r22
 c9e:	50 95       	com	r21
 ca0:	41 95       	neg	r20
 ca2:	5f 4f       	sbci	r21, 0xFF	; 255
 ca4:	6f 4f       	sbci	r22, 0xFF	; 255
 ca6:	7f 4f       	sbci	r23, 0xFF	; 255
 ca8:	40 83       	st	Z, r20
 caa:	51 83       	std	Z+1, r21	; 0x01
 cac:	62 83       	std	Z+2, r22	; 0x02
 cae:	73 83       	std	Z+3, r23	; 0x03
			if(Fu[i][1]<0)Fu[i][1]*=-1;
 cb0:	14 96       	adiw	r26, 0x04	; 4
 cb2:	4d 91       	ld	r20, X+
 cb4:	5d 91       	ld	r21, X+
 cb6:	6d 91       	ld	r22, X+
 cb8:	7c 91       	ld	r23, X
 cba:	17 97       	sbiw	r26, 0x07	; 7
 cbc:	77 23       	and	r23, r23
 cbe:	6c f4       	brge	.+26     	; 0xcda <main+0x11a>
 cc0:	70 95       	com	r23
 cc2:	60 95       	com	r22
 cc4:	50 95       	com	r21
 cc6:	41 95       	neg	r20
 cc8:	5f 4f       	sbci	r21, 0xFF	; 255
 cca:	6f 4f       	sbci	r22, 0xFF	; 255
 ccc:	7f 4f       	sbci	r23, 0xFF	; 255
 cce:	14 96       	adiw	r26, 0x04	; 4
 cd0:	4d 93       	st	X+, r20
 cd2:	5d 93       	st	X+, r21
 cd4:	6d 93       	st	X+, r22
 cd6:	7c 93       	st	X, r23
 cd8:	17 97       	sbiw	r26, 0x07	; 7
			mag = (uint8_t)(Fu[i][0] + Fu[i][1])/4;
 cda:	5c 91       	ld	r21, X
 cdc:	14 96       	adiw	r26, 0x04	; 4
 cde:	4c 91       	ld	r20, X
 ce0:	45 0f       	add	r20, r21
 ce2:	46 95       	lsr	r20
 ce4:	46 95       	lsr	r20
			if((mag)>7) {
 ce6:	48 30       	cpi	r20, 0x08	; 8
 ce8:	58 f0       	brcs	.+22     	; 0xd00 <main+0x140>
				lcd_buf1[i] = (mag) - 7 - 1;
 cea:	48 50       	subi	r20, 0x08	; 8
				if(lcd_buf1[i] > 7)
 cec:	48 30       	cpi	r20, 0x08	; 8
 cee:	18 f4       	brcc	.+6      	; 0xcf6 <main+0x136>
		for(i =1; i<N/2; i++) {
			if(Fu[i][0]<0)Fu[i][0]*=-1;
			if(Fu[i][1]<0)Fu[i][1]*=-1;
			mag = (uint8_t)(Fu[i][0] + Fu[i][1])/4;
			if((mag)>7) {
				lcd_buf1[i] = (mag) - 7 - 1;
 cf0:	d9 01       	movw	r26, r18
 cf2:	4c 93       	st	X, r20
 cf4:	02 c0       	rjmp	.+4      	; 0xcfa <main+0x13a>
				if(lcd_buf1[i] > 7)
				lcd_buf1[i] = 7;
 cf6:	d9 01       	movw	r26, r18
 cf8:	7c 92       	st	X, r7
				lcd_buf2[i] = 7;
 cfa:	dc 01       	movw	r26, r24
 cfc:	7c 92       	st	X, r7
 cfe:	04 c0       	rjmp	.+8      	; 0xd08 <main+0x148>
			}
			else {
				lcd_buf1[i] = ' ';
 d00:	d9 01       	movw	r26, r18
 d02:	6c 92       	st	X, r6
				lcd_buf2[i] = mag;
 d04:	dc 01       	movw	r26, r24
 d06:	4c 93       	st	X, r20
 d08:	38 96       	adiw	r30, 0x08	; 8
 d0a:	01 96       	adiw	r24, 0x01	; 1
 d0c:	2f 5f       	subi	r18, 0xFF	; 255
 d0e:	3f 4f       	sbci	r19, 0xFF	; 255

	}

	TRANSFORM();
	lcd_cmd(0xc0);
		for(i =1; i<N/2; i++) {
 d10:	ea 15       	cp	r30, r10
 d12:	fb 05       	cpc	r31, r11
 d14:	09 f0       	breq	.+2      	; 0xd18 <main+0x158>
 d16:	ba cf       	rjmp	.-140    	; 0xc8c <main+0xcc>
			else {
				lcd_buf1[i] = ' ';
				lcd_buf2[i] = mag;
			}
		}
		lcd_cmd(0x80);
 d18:	80 e8       	ldi	r24, 0x80	; 128
 d1a:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <lcd_cmd>
		for(i=1;i<16;i++)
		lcd_data(lcd_buf1[i]);
 d1e:	f4 01       	movw	r30, r8
 d20:	81 91       	ld	r24, Z+
 d22:	4f 01       	movw	r8, r30
 d24:	0e 94 3e 05 	call	0xa7c	; 0xa7c <lcd_data>
				lcd_buf1[i] = ' ';
				lcd_buf2[i] = mag;
			}
		}
		lcd_cmd(0x80);
		for(i=1;i<16;i++)
 d28:	c8 14       	cp	r12, r8
 d2a:	d9 04       	cpc	r13, r9
 d2c:	c1 f7       	brne	.-16     	; 0xd1e <main+0x15e>
		lcd_data(lcd_buf1[i]);
		lcd_cmd(0xc0);
 d2e:	80 ec       	ldi	r24, 0xC0	; 192
 d30:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <lcd_cmd>
		for(i=1;i<16;i++)
		lcd_data(lcd_buf2[i]);
 d34:	89 91       	ld	r24, Y+
 d36:	0e 94 3e 05 	call	0xa7c	; 0xa7c <lcd_data>
		}
		lcd_cmd(0x80);
		for(i=1;i<16;i++)
		lcd_data(lcd_buf1[i]);
		lcd_cmd(0xc0);
		for(i=1;i<16;i++)
 d3a:	ce 15       	cp	r28, r14
 d3c:	df 05       	cpc	r29, r15
 d3e:	d1 f7       	brne	.-12     	; 0xd34 <main+0x174>
 d40:	7a cf       	rjmp	.-268    	; 0xc36 <main+0x76>

00000d42 <__divmodsi4>:
 d42:	05 2e       	mov	r0, r21
 d44:	97 fb       	bst	r25, 7
 d46:	1e f4       	brtc	.+6      	; 0xd4e <__divmodsi4+0xc>
 d48:	00 94       	com	r0
 d4a:	0e 94 b8 06 	call	0xd70	; 0xd70 <__negsi2>
 d4e:	57 fd       	sbrc	r21, 7
 d50:	07 d0       	rcall	.+14     	; 0xd60 <__divmodsi4_neg2>
 d52:	0e 94 c8 06 	call	0xd90	; 0xd90 <__udivmodsi4>
 d56:	07 fc       	sbrc	r0, 7
 d58:	03 d0       	rcall	.+6      	; 0xd60 <__divmodsi4_neg2>
 d5a:	4e f4       	brtc	.+18     	; 0xd6e <__divmodsi4_exit>
 d5c:	0c 94 b8 06 	jmp	0xd70	; 0xd70 <__negsi2>

00000d60 <__divmodsi4_neg2>:
 d60:	50 95       	com	r21
 d62:	40 95       	com	r20
 d64:	30 95       	com	r19
 d66:	21 95       	neg	r18
 d68:	3f 4f       	sbci	r19, 0xFF	; 255
 d6a:	4f 4f       	sbci	r20, 0xFF	; 255
 d6c:	5f 4f       	sbci	r21, 0xFF	; 255

00000d6e <__divmodsi4_exit>:
 d6e:	08 95       	ret

00000d70 <__negsi2>:
 d70:	90 95       	com	r25
 d72:	80 95       	com	r24
 d74:	70 95       	com	r23
 d76:	61 95       	neg	r22
 d78:	7f 4f       	sbci	r23, 0xFF	; 255
 d7a:	8f 4f       	sbci	r24, 0xFF	; 255
 d7c:	9f 4f       	sbci	r25, 0xFF	; 255
 d7e:	08 95       	ret

00000d80 <__mulshisi3>:
 d80:	b7 ff       	sbrs	r27, 7
 d82:	0c 94 ea 06 	jmp	0xdd4	; 0xdd4 <__muluhisi3>

00000d86 <__mulohisi3>:
 d86:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <__muluhisi3>
 d8a:	82 1b       	sub	r24, r18
 d8c:	93 0b       	sbc	r25, r19
 d8e:	08 95       	ret

00000d90 <__udivmodsi4>:
 d90:	a1 e2       	ldi	r26, 0x21	; 33
 d92:	1a 2e       	mov	r1, r26
 d94:	aa 1b       	sub	r26, r26
 d96:	bb 1b       	sub	r27, r27
 d98:	fd 01       	movw	r30, r26
 d9a:	0d c0       	rjmp	.+26     	; 0xdb6 <__udivmodsi4_ep>

00000d9c <__udivmodsi4_loop>:
 d9c:	aa 1f       	adc	r26, r26
 d9e:	bb 1f       	adc	r27, r27
 da0:	ee 1f       	adc	r30, r30
 da2:	ff 1f       	adc	r31, r31
 da4:	a2 17       	cp	r26, r18
 da6:	b3 07       	cpc	r27, r19
 da8:	e4 07       	cpc	r30, r20
 daa:	f5 07       	cpc	r31, r21
 dac:	20 f0       	brcs	.+8      	; 0xdb6 <__udivmodsi4_ep>
 dae:	a2 1b       	sub	r26, r18
 db0:	b3 0b       	sbc	r27, r19
 db2:	e4 0b       	sbc	r30, r20
 db4:	f5 0b       	sbc	r31, r21

00000db6 <__udivmodsi4_ep>:
 db6:	66 1f       	adc	r22, r22
 db8:	77 1f       	adc	r23, r23
 dba:	88 1f       	adc	r24, r24
 dbc:	99 1f       	adc	r25, r25
 dbe:	1a 94       	dec	r1
 dc0:	69 f7       	brne	.-38     	; 0xd9c <__udivmodsi4_loop>
 dc2:	60 95       	com	r22
 dc4:	70 95       	com	r23
 dc6:	80 95       	com	r24
 dc8:	90 95       	com	r25
 dca:	9b 01       	movw	r18, r22
 dcc:	ac 01       	movw	r20, r24
 dce:	bd 01       	movw	r22, r26
 dd0:	cf 01       	movw	r24, r30
 dd2:	08 95       	ret

00000dd4 <__muluhisi3>:
 dd4:	0e 94 f5 06 	call	0xdea	; 0xdea <__umulhisi3>
 dd8:	a5 9f       	mul	r26, r21
 dda:	90 0d       	add	r25, r0
 ddc:	b4 9f       	mul	r27, r20
 dde:	90 0d       	add	r25, r0
 de0:	a4 9f       	mul	r26, r20
 de2:	80 0d       	add	r24, r0
 de4:	91 1d       	adc	r25, r1
 de6:	11 24       	eor	r1, r1
 de8:	08 95       	ret

00000dea <__umulhisi3>:
 dea:	a2 9f       	mul	r26, r18
 dec:	b0 01       	movw	r22, r0
 dee:	b3 9f       	mul	r27, r19
 df0:	c0 01       	movw	r24, r0
 df2:	a3 9f       	mul	r26, r19
 df4:	70 0d       	add	r23, r0
 df6:	81 1d       	adc	r24, r1
 df8:	11 24       	eor	r1, r1
 dfa:	91 1d       	adc	r25, r1
 dfc:	b2 9f       	mul	r27, r18
 dfe:	70 0d       	add	r23, r0
 e00:	81 1d       	adc	r24, r1
 e02:	11 24       	eor	r1, r1
 e04:	91 1d       	adc	r25, r1
 e06:	08 95       	ret

00000e08 <_exit>:
 e08:	f8 94       	cli

00000e0a <__stop_program>:
 e0a:	ff cf       	rjmp	.-2      	; 0xe0a <__stop_program>
